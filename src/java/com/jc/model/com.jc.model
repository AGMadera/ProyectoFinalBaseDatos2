
CREATE TABLE PELICULA (
ID_PELICULA INTEGER,
NOMBRE VARCHAR2(120), 
GENERO VARCHAR2(120),
CLASIFICACION VARCHAR2(120),
SINOPSIS VARCHAR2(200),   
CONSTRAINT ID_PELICULA_PK PRIMARY KEY(ID_PELICULA),
);



CREATE TABLE HORARIO (
ID_HORARIO INTEGER,
ID_PELICULA INTEGER, 
HORARIO INTEGER, 
CONSTRAINT ID_HORARIO_PK PRIMARY KEY(ID_HORARIO),
CONSTRAINT ID_PELICULA_FK FOREIGN KEY(ID_PELICULA)
REFERENCES PELICULA(ID_PELICULA)
);

CREATE TABLE SALA (
ID_SALA INTEGER,
ID_HORARIO INTEGER, 
ASIENTO INTEGER, 
CONSTRAINT ID_SALAS_PK PRIMARY KEY(ID_SALAS),
CONSTRAINT ID_PELICULA_FK FOREIGN KEY(ID_PELICULA)
REFERENCES PELICULA(ID_PELICULA)
);




create sequence SEC_PELICULA
start with 1
increment by 1
nomaxvalue;

create sequence SEC_HORARIO
start with 1
increment by 1
nomaxvalue;

create sequence SEC_SALA
start with 1
increment by 1
nomaxvalue;

create or replace PROCEDURE GUARDAR_PELICULA(MY_ID_PELICULA OUT INTEGER,MY_NOMBRE IN VARCHAR2,MY_GENERO IN VARCHAR2, MY_CLASIFICACION IN VARCHAR2, MY_SINOPSIS IN VARCHAR2)
AS
BEGIN 
SELECT SEC_PELICULA.NEXTVAL INTO MY_ID_PEICULA FROM DUAL;
INSERT INTO PELICULA VALUES(MY_ID_PELICULA, MY_NOMBRE, MY_GENERO, MY_CLASIFICACION, MY_SINOPSIS);
END;
/

create or replace PROCEDURE GUARDAR_HORARIO(MY_ID_HORARIO OUT INTEGER,MY_ID_PELICULA IN INTEGER, MY_HORARIO IN INTEGER) 
AS BEGIN   
SELECT SEC_HORARIO.NEXTVAL INTO MY_ID_HORARIO FROM DUAL; 
INSERT INTO HORARIO VALUES(MY_ID_HORARIO, MY_ID_PELICULA, MY_HORARIO); 
END; 
/ 

create or replace PROCEDURE GUARDAR_SALA(MY_ID_SALA OUT INTEGER, MY_ID_HORARIO IN INTEGER, MY_ASIENTO IN INTEGER) 
AS BEGIN  
SELECT SEC_SALA.NEXTVAL INTO MY_ID_SALA FROM DUAL; 
INSERT INTO SALA VALUES(MY_ID_SALA, MY_ID_HORARIO, MY_ASIENTO); 
END; 
/ 



CREATE OR REPLACE PROCEDURE ACTUALIZAR_PELICULA(MY_ID_PELICULA IN INTEGER, MY_NOMBRE IN VARCHAR2,MY_GENERO IN VARCHAR2, MY_CLASIFICACION IN VARCHAR2, MY_SINOPSIS IN VARCHAR2)
as
begin 
UPDATE producto SET NOMBRE=MY_NOMBRE, GENERO = MY_GENERO , CLASIFICACION = MY_CLASIFICACION, SINOPSIS=MY_SINOPSIS WHERE ID_PELICULA=MY_ID_PELICULA;
end;
/


CREATE OR REPLACE PROCEDURE BORRAR_PELICULA(MY_ID_PELICULA IN INTEGER)
as
begin 
DELTE FROM PELICULAS WHERE ID_PELICULA=MY_ID_PELICULA;
end;
/









create or replace trigger disparador_horario before insert or update on HORARIO for each row
begin 
if :NEW.HORARIO > 24 then 
raise_application_error(-20001, 'Lo siento pero ese horario no esta disponible’);
end if;
end;
/


create or replace trigger disparador_sala before insert or update on SALA for each row
begin 
if :NEW.ASIENTO > 50 then 
raise_application_error(-20001, 'Lo siento pero la sala esta llena’);
end if;
end;
/






